%==== Script of 3DEnVar===
%=== Based in the Paper: "A review of operational methods of variational 
% and ensemble-variational data assimilation" R.N. Bannister
clear all
close all
clc

%==== Parameters====
%===Model Parameters===
load Xreal %True state
n=40; %Number of states
F=8; %External force

%===Observation Parameters===
p_obsersation=1;  %Fraction of observabled states
m=round(n*p_obsersation); % Number of observations
sigma=0.01; %Observation error
R=sigma^2*eye(m,m);
inR=inv(R);
H = eye(n,n); 
H = H(randperm(n,m),:);  %Matrix that maps the state space into the observation space
M=20; % Asimilation window
frequency=1; % Frequency of observations

%===Simulation Parameters===
tsim=500; %Time steps simulation
dt=0.01; %step length

%=== DA parameters===
N=80; % Number of ensemble
inner=20; %Number of inner steps
tolerance_inner=0.02;
sparse=10; % Sparse of the initial ensemble
add_inflation=0; % Additive inflation
St_Ass=20; % Time to propagate the esemble from a randon perturbation
muestreo=St_Ass:frequency:St_Ass+M;



%====Simulation====
%===Initialization===
xb=zeros(n,tsim,N); % Background State. Dimensions=(states,time,ensemble member)
xa=zeros(n,tsim,N); % Analysis State. Dimensions=(states,time,ensemble member)
Xb=zeros(n,N);
Yx=zeros(m,N);
%===Ensemble generation===
x0=-sparse/2+sparse*rand(n,N); %The ensemble is generated by the initial condition
xb(:,1,:)=x0;
xa=xb;
%todo lo que x es estados (concentraciones), todo lo que tenga y son 
%salidas (columnas)

for i=2:tsim
    for Nen=1:N %Propagation in time of all the ensemble members to generate background
        [xb(:,i,Nen),t]=Lorenz_96_one_step(1,dt,squeeze(xb(:,i-1,Nen)),F);  
    end
    meanxb(:,i)=mean(xb(:,i,:),3); %Ensemble mean
    meanyb=H*meanxb(:,i);  %Model observation based on the ensemble mean
    for Nen=1:N
       Xb(:,Nen,i)= xb(:,i,Nen)-meanxb(:,i);
       Yx(:,Nen,i)=H*xb(:,i,Nen)-meanyb; %Aproximation of H*M*Xb according with equation (38) 
    end
    Yx(:,:,i)=Yx(:,:,i)*sqrt(1/(N-1));
    Xb(:,:,i)=Xb(:,:,i)*sqrt(1/(N-1));
end

%===Analysis step===
 %==Inner Loop==
dx=zeros(N,inner);
dx(:,1)=rand(N,1);
xk=zeros(n,tsim-St_Ass,inner);
xk(:,1,1)=meanxb(:,St_Ass)+Xb(:,:,St_Ass)*dx(:,1);
muestra=0;

for i=St_Ass+1:tsim
 [xk(:,i,1),t]=Lorenz_96_one_step(1,dt,squeeze(xk(:,i-1,1)),F);  
    if sum(muestreo==i) 
        muestra=muestra+1;
         y(:,muestra)=H*Xreal(:,i)+sigma*rand(1,1);
         yxk(:,muestra)=H*xk(:,i,1);
         d(:,muestra)=(y(:,muestra)-yxk(:,muestra));  %Innovation Matriz
    end
end
  k=2;
  norma(1)=tolerance_inner;
  flaq=0;
  muestra=0;
  
      while norma(k-1)>=tolerance_inner && k<inner && flaq<2
          sum1=0;
          sum2=0;
          for j=1:M
             sum1=sum1 + Yx(:,:,muestreo(j))'*inR*Yx(:,:,muestreo(j));
             sum2=sum2+ Yx(:,:,muestreo(j))'*inR*d(:,j);
          end
             dx(:,k)= real(pinv(eye(N,1)+sum1))*sum2;               
           %=Incremental=
         xk(:,St_Ass,k)=xk(:,St_Ass,k-1)+Xb(:,:,St_Ass)*dx(:,k);
         muestra=0;
         for iSt_A=ss+1:tsim
             [xk(:,i,k),t]=Lorenz_96_one_step(1,dt,squeeze(xk(:,i-1,k)),F);  
              if sum(muestreo==i) 
                   muestra=muestra+1;
                   y(:,muestra)=H*Xreal(:,i)+sigma*rand(1,1);
                   yxk(:,muestra)=H*xk(:,i,k);
                   d(:,muestra)=(y(:,muestra)-yxk(:,muestra));  %Innovation Matriz
              end
         end
         norma(k)=norm(Xb(:,:,St_Ass)*dx(:,k));
         if diff(norma(k-1:k))>0 
             flaq=flaq+1;          
         end
         if flaq==2
            dx(:,k)=dx(:,k-1); 
            xk(:,k)=xk(:,k-1);
         end
         k=k+1;
     end
     meanxa(:,:)=squeeze((xk(:,:,k-1)));
     meanxa(:,1:St_Ass-1)=NaN;
     yxa(:,i)=H*meanxa(:,i);
%==End Inner Loop==

for i=[6,16,33]
    figure
    plot(Xreal(i,1:tsim),'-r','LineWidth',2)
    hold on
    plot(meanxb(i,1:tsim),'--k','LineWidth',2)
    plot(meanxa(i,1:tsim),'-b','LineWidth',2)
    y1=get(gca,'ylim');
    plot([St_Ass St_Ass],y1,'g--','LineWidth',2)
    plot([muestreo(end) muestreo(end)],y1,'k--','LineWidth',1)
    plot(St_Ass,meanxa(i,St_Ass),'yp','MarkerSize',11,'MarkerFaceColor','y','MarkerEdgeColor','k')
    legend('X true','Background','X(analysis) analysis','Start Assimilation','End Assimilation','X_0^a')
end

